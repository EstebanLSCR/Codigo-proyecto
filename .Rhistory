<<<<<<< HEAD
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/365 ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
(2/365)
1/(2/365)
365/2
1/(2/365)
1/(2/365)
365/2
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])*(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])*(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
febrero=0
marzo=0
abril=0
mayo=0
junio=0
julio=0
for (i in 1:length(meses)){
if(meses[i]=='febrero'){
febrero=febrero+1
}
else if(meses[i]=='marzo'){
marzo=marzo+1
}
else if(meses[i]=='abril')
abril=abril+1
else if(meses[i]=='mayo')
mayo=mayo+1
else if(meses[i]=='junio'){
junio=junio+1}
else if(meses[i]=='julio'){
julio=julio+1}
}
fechas
meses <- month(defraudaciones$FechaRegistro)
meses
defraudaciones$FechaRegistro
meses <- month(defraudaciones$FechaRegistro)
febrero=0
marzo=0
abril=0
mayo=0
junio=0
julio=0
for (i in 1:length(meses)){
if(meses[i]=='febrero'){
febrero=febrero+1
}
else if(meses[i]=='marzo'){
marzo=marzo+1
}
else if(meses[i]=='abril')
abril=abril+1
else if(meses[i]=='mayo')
mayo=mayo+1
else if(meses[i]=='junio'){
junio=junio+1}
else if(meses[i]=='julio'){
julio=julio+1}
}
meses2 = c(febrero,marzo,abril,mayo,junio,julio)
meses2
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Semestral(fechas)
defraudaciones$FechaRegistro
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Semestral <- function(fechas){
=======
>>>>>>> a8342310c56c105c0cbf722dbee5cec329a3c0b4
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral(fechas)
F.lambda.Diario(fechas)
F.lambda.Semestral(fechas)
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Semestral(fechas)
F.lambda.Semestral(sort(fechas))
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
mean(meses2)
rep(2,4)
fechas
Datos <- data.frame(Fechas = fechas)
Datos
min(Datos$Fechas)
max(Datos$Fechas)
max(Datos$Fechas)
fechas
sort(fechas)
unique(sort(fechas))
n.unique(sort(fechas))
count(unique(sort(fechas)))
unique(sort(fechas))
interval(start = ymd(20200101), end = 20200630)
interval(start = ymd(20200101), end = ymd(20200630))
interval(start = ymd(20200101), end = ymd(20200630))[2]
c(ymd(20200101):ymd(20200630))
ymd(20200101)
ymd(20200630)
days(interval(start = ymd(20200101), end = ymd(20200630)))
day(interval(start = ymd(20200101), end = ymd(20200630)))
vecSeq <- Vectorize(seq.Date, c(ymd(20200101), ymd(20200630)), SIMPLIFY = FALSE)
seq.Date(from = ymd(20200101), to = ymd(20200630), by = day(1))
seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
length(diasT)
diasTn <- c(1:length(diasT))
diasTn
count(fechas)
count(df = Datos, vars = Fechas)
count(df = Datos, vars = "Fechas")
count(df = Datos, vars = "Fechas")
Datos$Fechas == diasT[2]
sum(Datos$Fechas == diasT[2])
sum(Datos$Fechas == diasT[1])
sum(Datos$Fechas == diasT[3])
sum(Datos$Fechas == diasT[4])
sum(Datos$Fechas == diasT[5])
sum(Datos$Fechas == diasT[6])
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
diasTn
cumsum(diasTn)
diasTn
cumsum(diasTn)
sum(c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0))
length((c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0)))
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral(sort(fechas))
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
mean(meses2)
Datos <- data.frame(Fechas = fechas)
min(Datos$Fechas)
max(Datos$Fechas)
unique(sort(fechas))
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
# sum(c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0))
recl1 <- log(defraudaciones$MontoHistorico)
recl2 <- defraudaciones$MontoHistorico
res1 <- fit.cont(data2fit=recl1)
knitr::opts_chunk$set(echo = TRUE)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
defraudaciones
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
read_excel("Defraudaciones enero-junio 2020.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral(sort(fechas))
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
mean(meses2)
Datos <- data.frame(Fechas = fechas)
min(Datos$Fechas)
max(Datos$Fechas)
unique(sort(fechas))
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
# sum(c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0))
F.nbinom
F.pois
rpois(1000,4.13)
prueba<-rpois(1000,4.13)
ajuste<-fitdist(prueba,"pois")
ajuste
F.pois
res1 <- fit.cont(data2fit=diasTn)
install.packages("Tktable")
install.packages("Tktable")
install.packages("tktable")
library(rriskDistributions)
plot(F.pois)
plot(F.pois, demp = TRUE)
plot(F.pois, histo = FALSE, demp = TRUE)
cdfcomp(F.pois, addlegend=FALSE)denscomp(F.pois, addlegend=FALSE)ppcomp(F.pois, addlegend=FALSE)qqcomp(F.pois, addlegend=FALSE)
plot(F.pois)
plot(F.pois, demp = TRUE)
plot(F.pois, histo = FALSE, demp = TRUE)
cdfcomp(F.pois, addlegend=FALSE)
denscomp(F.pois, addlegend=FALSE)ppcomp(F.pois, addlegend=FALSE)qqcomp(F.pois, addlegend=FALSE)
plot(F.pois)
plot(F.pois, demp = TRUE)
plot(F.pois, histo = FALSE, demp = TRUE)
cdfcomp(F.pois, addlegend=FALSE)
denscomp(F.pois, addlegend=FALSE)
ppcomp(F.pois, addlegend=FALSE)
qqcomp(F.pois, addlegend=FALSE)
meses2
F.nbinom2 <- fitdist(meses2, "nbinom")
F.pois2 <- fitdist(meses2, "pois")
F.geom2 <- fitdist(meses2, "geom")
F.nbinom2
F.pois2
plot(F.pois2)
plot(F.pois2, demp = TRUE)
plot(F.pois2, histo = FALSE, demp = TRUE)
cdfcomp(F.pois2, addlegend=FALSE)
denscomp(F.pois2, addlegend=FALSE)
ppcomp(F.pois2, addlegend=FALSE)
qqcomp(F.pois2, addlegend=FALSE)
plot(F.nbinom2)
plot(F.nbinom2, demp = TRUE)
plot(F.nbinom2, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom2, addlegend=FALSE)
denscomp(F.nbinom2, addlegend=FALSE)
ppcomp(F.nbinom2, addlegend=FALSE)
qqcomp(F.nbinom2, addlegend=FALSE)
F.geom2 <- fitdist(meses2, "geom")
plot(F.geom2)
plot(F.geom2, demp = TRUE)
plot(F.geom2, histo = FALSE, demp = TRUE)
cdfcomp(F.geom2, addlegend=FALSE)
denscomp(F.geom2, addlegend=FALSE)
ppcomp(F.geom2, addlegend=FALSE)
qqcomp(F.geom2, addlegend=FALSE)
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200626), by = "day")
diasT <- seq.Date(from = ymd(20200102), to = ymd(20200626), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
F.nbinom
F.pois
F.nbinom
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
F.nbinom <- fitdist(diasTn, "nbinom")
F.nbinom
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
diasTn
F.nbinom
Datos
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
plot(F.pois)
plot(F.pois, demp = TRUE)
plot(F.pois, histo = FALSE, demp = TRUE)
cdfcomp(F.pois, addlegend=FALSE)
denscomp(F.pois, addlegend=FALSE)
ppcomp(F.pois, addlegend=FALSE)
qqcomp(F.pois, addlegend=FALSE)
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
F.pois
plot(F.pois)
plot(F.pois, demp = TRUE)
plot(F.pois, histo = FALSE, demp = TRUE)
cdfcomp(F.pois, addlegend=FALSE)
denscomp(F.pois, addlegend=FALSE)
ppcomp(F.pois, addlegend=FALSE)
qqcomp(F.pois, addlegend=FALSE)
q()
q()
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral(sort(fechas))
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
mean(meses2)
Datos <- data.frame(Fechas = fechas)
min(Datos$Fechas)
max(Datos$Fechas)
unique(sort(fechas))
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
plot(F.pois)
plot(F.pois, demp = TRUE)
plot(F.pois, histo = FALSE, demp = TRUE)
cdfcomp(F.pois, addlegend=FALSE)
denscomp(F.pois, addlegend=FALSE)
ppcomp(F.pois, addlegend=FALSE)
qqcomp(F.pois, addlegend=FALSE)
plot(F.geom)
plot(F.geom, demp = TRUE)
plot(F.geom, histo = FALSE, demp = TRUE)
cdfcomp(F.geom, addlegend=FALSE)
denscomp(F.geom, addlegend=FALSE)
ppcomp(F.geom, addlegend=FALSE)
qqcomp(F.geom, addlegend=FALSE)
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
# sum(c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0))
recl1 <- log(defraudaciones$MontoHistorico)
recl2 <- defraudaciones$MontoHistorico
res1 <- fit.cont(data2fit=diasTn)
# fitdist(log((defraudaciones$MontoHistorico), "pareto")
# fitdist(defraudaciones$MontoHistorico, "pareto")
# fitdist(((defraudaciones %>% filter(MontoHistorico>221194.94))$MontoHistorico), "pareto")
# hist(recl1)
# hist(recl2)
hist((defraudaciones %>% filter(MontoHistorico>7000000))$MontoHistorico)
hist(log((defraudaciones %>% filter(MontoHistorico>7000000))$MontoHistorico))
# 75%
x1 <- (defraudaciones %>% filter(MontoHistorico>221194.94))$MontoHistorico
x2 <- log((defraudaciones %>% filter(MontoHistorico>221194.94))$MontoHistorico)
# fit.cont(data2fit=x1)
# fit.cont(data2fit=x2)
# 99%
y1 <- (defraudaciones %>% filter(MontoHistorico>3074637))$MontoHistorico
y2 <- log((defraudaciones %>% filter(MontoHistorico>3074637))$MontoHistorico)
# fit.cont(data2fit=y1)
# fit.cont(data2fit=y2)
F.nbinom <- fitdist(diasTn, "nbinom")
# F.pois <- fitdist(diasTn, "pois")
# F.geom <- fitdist(diasTn, "geom")
#
#
# plot(F.pois)
# plot(F.pois, demp = TRUE)
# plot(F.pois, histo = FALSE, demp = TRUE)
#
# cdfcomp(F.pois, addlegend=FALSE)
# denscomp(F.pois, addlegend=FALSE)
# ppcomp(F.pois, addlegend=FALSE)
# qqcomp(F.pois, addlegend=FALSE)
#
# plot(F.geom)
# plot(F.geom, demp = TRUE)
# plot(F.geom, histo = FALSE, demp = TRUE)
#
# cdfcomp(F.geom, addlegend=FALSE)
# denscomp(F.geom, addlegend=FALSE)
# ppcomp(F.geom, addlegend=FALSE)
# qqcomp(F.geom, addlegend=FALSE)
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
<<<<<<< HEAD
F.nbinom
knitr::opts_chunk$set(echo = TRUE)
F.nbinom
F.nbinom
summary(F.nbinom)
F.nbinom$estimate
?pnbinom
F.nbinom$estimate[1]
F.nbinom$estimate[2]
prob <-
F.nbinom$estimate
prob
prob <- F.nbinom$estimate[1]/(sum(F.nbinom$estimate))
prob
pnbinom(5,size = 0.04058972 , prob = prob)
dnbinom(5,size = 0.04058972 , prob = prob)
size <- F.nbinom$estimate[1]
size
dnbinom(5,size = 0.04058972 , prob = prob)
pnbinom(5,size = 0.04058972 , prob = prob)
prob
prob
pnbinom(5,size = size , prob = prob)
pnbinom(5,size = size , mu =  F.nbinom$estimate[2])
plot(F.nbinom)
F.nbinom <- fitdist(diasTn, "nbinom")
F.nbinom
plot(F.nbinom)
library(fitdistrplus)
library(actuar)
library(kutils)
F.nbinom <- fitdist(diasTn, "nbinom")
plot(F.nbinom)
qqcomp(F.nbinom, addlegend=FALSE)
cdfcomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppois(1,1)
dpois(1,1)
mean(1:5)
cdfcomp(F.geom, addlegend=FALSE)
?ks.test
diasTn
?ppois
ks.test(diasTn, y = ppois, lambda = mean(diasTn) )
ks.test(sort(diasTn), y = ppois, lambda = mean(diasTn) )
ks.test(sort(diasTn), y = ppois, lambda = mean(diasTn) )
=======
fitdist
quantile(defraudaciones$MontoHistorico,0.99)
fitdist(diasTn, "nbinom")
fitdist(data=diasTn, distr="nbinom",method="mle")
fitdist(diasTn, "nbinom")
fitdist(data=diasTn, distr="nbinom",method="mle")
fitdist(diasTn, "nbinom")
fitdist(data=diasTn, distr="nbinom",method="mle")
fitdist(data=diasTn, distr="nbinom",method="mme")
fitdist(data=diasTn, distr="nbinom",method="qme")
fitdist(data=diasTn, distr="nbinom",method="mme")
fitdist(data=diasTn, distr="nbinom",method="qme")
# fitdist(data=diasTn, distr="nbinom",method="qme")
fitdist(data=diasTn, distr="nbinom",method="mge")
# fitdist(data=diasTn, distr="nbinom",method="qme")
# fitdist(data=diasTn, distr="nbinom",method="mge")
fitdist(data=diasTn, distr="nbinom",method="mse")
fitdist(data=diasTn, distr="nbinom",method="mme")
fitdist(data=diasTn, distr="nbinom",method="mme") ###
>>>>>>> a8342310c56c105c0cbf722dbee5cec329a3c0b4
