plot(defraudaciones$MesD)
plot(defraudaciones$MesO)
plot(defraudaciones$MesR)
defraudaciones
# "O" ocurrencia
# "D" descubrimiento
F.Frecuencias <- function(datos, tipo){
if(tipo == "R"){
datost <- datos %>% mutate(Mes = month(datos$))
defraudaciones <- defraudaciones %>% mutate(MesD = month(defraudaciones$FechaDescubrimiento),
MesO = month(defraudaciones$FechaOcurrencia),
MesR = month(defraudaciones$FechaRegistro))
plot(defraudaciones$MesD)
plot(defraudaciones$MesO)
plot(defraudaciones$MesR)
defraudaciones
# "O" ocurrencia
# "D" descubrimiento
F.Frecuencias <- function(datos, tipo){
if(tipo == "R"){
datost <- datos %>% mutate(Mes = month(datos$FechaRegistro))
}else{
datost <- datos %>% mutate(Mes = month(datos$FechaDescubrimiento))
}
frec <- c()
for (i in 1:12) {
frec[i] <- count(datost %>% filter(Mes == i))[[1]]
}
return( frec )
}
frecuencias.O <- F.Frecuencias(defraudaciones, "O")
frecuencias.D <- F.Frecuencias(defraudaciones, "D")
chisq.test(frecuencias.D)
chisq.test(frecuencias.O)
frecuencias.R <- F.Frecuencias(defraudaciones, "R")
frecuencias.R
frecuencias.R <- F.Frecuencias(defraudaciones, "R")[1:6]
frecuencias.R
frecuencias.R
chisq.test(frecuencias.R)
defraudaciones$FechaRegistro
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario(fechas)
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/365 ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
(2/365)
1/(2/365)
365/2
1/(2/365)
1/(2/365)
365/2
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])*(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])*(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
febrero=0
marzo=0
abril=0
mayo=0
junio=0
julio=0
for (i in 1:length(meses)){
if(meses[i]=='febrero'){
febrero=febrero+1
}
else if(meses[i]=='marzo'){
marzo=marzo+1
}
else if(meses[i]=='abril')
abril=abril+1
else if(meses[i]=='mayo')
mayo=mayo+1
else if(meses[i]=='junio'){
junio=junio+1}
else if(meses[i]=='julio'){
julio=julio+1}
}
fechas
meses <- month(defraudaciones$FechaRegistro)
meses
defraudaciones$FechaRegistro
meses <- month(defraudaciones$FechaRegistro)
febrero=0
marzo=0
abril=0
mayo=0
junio=0
julio=0
for (i in 1:length(meses)){
if(meses[i]=='febrero'){
febrero=febrero+1
}
else if(meses[i]=='marzo'){
marzo=marzo+1
}
else if(meses[i]=='abril')
abril=abril+1
else if(meses[i]=='mayo')
mayo=mayo+1
else if(meses[i]=='junio'){
junio=junio+1}
else if(meses[i]=='julio'){
julio=julio+1}
}
meses2 = c(febrero,marzo,abril,mayo,junio,julio)
meses2
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Semestral(fechas)
defraudaciones$FechaRegistro
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral(fechas)
F.lambda.Diario(fechas)
F.lambda.Semestral(fechas)
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Semestral(fechas)
F.lambda.Semestral(sort(fechas))
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
mean(meses2)
rep(2,4)
fechas
Datos <- data.frame(Fechas = fechas)
Datos
min(Datos$Fechas)
max(Datos$Fechas)
max(Datos$Fechas)
fechas
sort(fechas)
unique(sort(fechas))
n.unique(sort(fechas))
count(unique(sort(fechas)))
unique(sort(fechas))
interval(start = ymd(20200101), end = 20200630)
interval(start = ymd(20200101), end = ymd(20200630))
interval(start = ymd(20200101), end = ymd(20200630))[2]
c(ymd(20200101):ymd(20200630))
ymd(20200101)
ymd(20200630)
days(interval(start = ymd(20200101), end = ymd(20200630)))
day(interval(start = ymd(20200101), end = ymd(20200630)))
vecSeq <- Vectorize(seq.Date, c(ymd(20200101), ymd(20200630)), SIMPLIFY = FALSE)
seq.Date(from = ymd(20200101), to = ymd(20200630), by = day(1))
seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
length(diasT)
diasTn <- c(1:length(diasT))
diasTn
count(fechas)
count(df = Datos, vars = Fechas)
count(df = Datos, vars = "Fechas")
count(df = Datos, vars = "Fechas")
Datos$Fechas == diasT[2]
sum(Datos$Fechas == diasT[2])
sum(Datos$Fechas == diasT[1])
sum(Datos$Fechas == diasT[3])
sum(Datos$Fechas == diasT[4])
sum(Datos$Fechas == diasT[5])
sum(Datos$Fechas == diasT[6])
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
diasTn
cumsum(diasTn)
diasTn
cumsum(diasTn)
sum(c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0))
length((c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0)))
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral(sort(fechas))
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
mean(meses2)
Datos <- data.frame(Fechas = fechas)
min(Datos$Fechas)
max(Datos$Fechas)
unique(sort(fechas))
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
# sum(c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0))
recl1 <- log(defraudaciones$MontoHistorico)
recl2 <- defraudaciones$MontoHistorico
res1 <- fit.cont(data2fit=recl1)
knitr::opts_chunk$set(echo = TRUE)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
defraudaciones
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
read_excel("Defraudaciones enero-junio 2020.xlsx")
knitr::opts_chunk$set(echo = TRUE)
install.packages("dplyr")
install.packages("fitdistrplus")
install.packages("actuar")
install.packages("kutils")
install.packages("tidyr")
install.packages("xtable")
install.packages("dplyr")
install.packages("readxl")
install.packages("rriskDistributions")
install.packages("lubridate")
install.packages("ggplot2")
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
fechas <- defraudaciones$FechaRegistro
# F.lambda.Diario <- function(fechas){
#   return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
# }
#
# F.lambda.Semestral <- function(fechas){
#   return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
# }
#
# F.lambda.Diario(fechas)
#
# F.lambda.Semestral(sort(fechas))
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
mean(meses2)
# Pasar a Python
Datos <- data.frame(Fechas = fechas)
min(Datos$Fechas)
max(Datos$Fechas)
unique(sort(fechas))
diasT <- seq.Date(from = ymd(20200101), to = ymd(20200630), by = "day")
diasTn <- c(1:length(diasT))
for (i in 1:length(diasT)) {
diasTn[i] <- sum(Datos$Fechas == diasT[i])
}
diasTn
cumsum(diasTn)
F.nbinom <- fitdist(diasTn, "nbinom")
F.pois <- fitdist(diasTn, "pois")
F.geom <- fitdist(diasTn, "geom")
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
# sum(c(0,20,1,0,0,0,0,9,1,1,0,0,0,1,10,1,8,0,0,0,0,0,15,0,0,0,0,1,15,0,1,0,0,0,0,17,0,0,0,0,0,0,7,16,12,0,0,0,0,6,0,1,0,0,6,0,0,1,0,0,0,12,0,9,10,18,0,0,2,0,19,1,0,0,0,1,1,15,2,1,0,0,24,0,1,2,14,0,0,3,4,27,0,34,0,0,0,0,0,0,0,0,0,0,0,0,1,11,0,0,0,0,1,6,0,0,0,0,28,0,0,0,0,0,25,0,5,8,2,0,0,0,16,2,1,0,0,0,0,31,2,14,32,0,0,4,23,4,7,2,0,0,1,22,14,0,0,0,0,0,51,0,7,1,0,0,4,7,4,0,7,0,0,1,16,6,28,8,0,0,0,0))
# chisquare(diasTn, [np.mean(dias)]*len(dias)) #Python
recl1 <- log(defraudaciones$MontoHistorico)
recl2 <- defraudaciones$MontoHistorico
res1 <- fit.cont(data2fit=recl1)
res1 <- fit.cont(data2fit=recl1)
install.packages("gof")
install.packages("goftest")
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
F.geom <- fitdist(diasTn, "geom")
plot(F.geom)
plot(F.geom, demp = TRUE)
plot(F.geom, histo = FALSE, demp = TRUE)
cdfcomp(F.geom, addlegend=FALSE)
denscomp(F.geom, addlegend=FALSE)
ppcomp(F.geom, addlegend=FALSE)
qqcomp(F.geom, addlegend=FALSE)
F.nbinom <- fitdist(diasTn, "nbinom")
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
F.pois <- fitdist(diasTn, "pois")
plot(F.pois)
plot(F.pois, demp = TRUE)
plot(F.pois, histo = FALSE, demp = TRUE)
cdfcomp(F.pois, addlegend=FALSE)
denscomp(F.pois, addlegend=FALSE)
ppcomp(F.pois, addlegend=FALSE)
qqcomp(F.pois, addlegend=FALSE)
F.nbinom <- fitdist(meses2, "nbinom")
F.nbinom
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
F.nbinom
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
F.nbinom <- fitdist(diasTn, "nbinom")
plot(F.nbinom)
plot(F.nbinom, demp = TRUE)
plot(F.nbinom, histo = FALSE, demp = TRUE)
cdfcomp(F.nbinom, addlegend=FALSE)
denscomp(F.nbinom, addlegend=FALSE)
ppcomp(F.nbinom, addlegend=FALSE)
qqcomp(F.nbinom, addlegend=FALSE)
F.nbinom
