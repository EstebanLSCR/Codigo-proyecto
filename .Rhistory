knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
install.packages("fitdistrplus")
install.packages("actuar")
install.packages("kutils")
install.packages("tidyr")
install.packages("xtable")
install.packages("dplyr")
install.packages("vioplot")
install.packages("ggplot2")
install.packages("readxl")
install.packages("rriskDistributions")
install.packages("lubridate")
install.packages("tidyverse")
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
library(vioplot)
knitr::opts_chunk$set(echo = TRUE)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
library(vioplot)
library(fitdistrplus)
library(actuar)
library(kutils)
library(tidyr)
library(xtable)
library(dplyr)
library(vioplot)
install.packages("vioplot")
library(vioplot)
#library(vioplot)
library(ggplot2)
library(readxl)
library(rriskDistributions)
library(lubridate)
defraudaciones <- read_excel("Defraudaciones enero-junio 2020.xlsx")
recl1 <- log(defraudaciones$MontoHistorico)
recl2 <- defraudaciones$MontoHistorico
res1 <- fit.cont(data2fit=recl1)
hist((defraudaciones %>% filter(MontoHistorico>7000000))$MontoHistorico)
hist(log((defraudaciones %>% filter(MontoHistorico>7000000))$MontoHistorico))
# 75%
x1 <- (defraudaciones %>% filter(MontoHistorico>221194.94))$MontoHistorico
x2 <- log((defraudaciones %>% filter(MontoHistorico>221194.94))$MontoHistorico)
fit.cont(data2fit=x1)
fit.cont(data2fit=x2)
# 99%
y1 <- (defraudaciones %>% filter(MontoHistorico>3074637))$MontoHistorico
y2 <- log((defraudaciones %>% filter(MontoHistorico>3074637))$MontoHistorico)
fit.cont(data2fit=y1)
quantile(defraudaciones$MontoHistorico,0.99)
hist(((defraudaciones %>% filter(MontoHistorico<7000000))$MontoHistorico))
hist(log((defraudaciones %>% filter(MontoHistorico<7000000))$MontoHistorico))
defraudaciones <- defraudaciones %>% mutate(MesD = month(defraudaciones$FechaDescubrimiento),
MesO = month(defraudaciones$FechaOcurrencia),
MesR = month(defraudaciones$FechaRegistro))
plot(defraudaciones$MesD)
plot(defraudaciones$MesO)
plot(defraudaciones$MesR)
defraudaciones
# "O" ocurrencia
# "D" descubrimiento
F.Frecuencias <- function(datos, tipo){
if(tipo == "R"){
datost <- datos %>% mutate(Mes = month(datos$))
defraudaciones <- defraudaciones %>% mutate(MesD = month(defraudaciones$FechaDescubrimiento),
MesO = month(defraudaciones$FechaOcurrencia),
MesR = month(defraudaciones$FechaRegistro))
plot(defraudaciones$MesD)
plot(defraudaciones$MesO)
plot(defraudaciones$MesR)
defraudaciones
# "O" ocurrencia
# "D" descubrimiento
F.Frecuencias <- function(datos, tipo){
if(tipo == "R"){
datost <- datos %>% mutate(Mes = month(datos$FechaRegistro))
}else{
datost <- datos %>% mutate(Mes = month(datos$FechaDescubrimiento))
}
frec <- c()
for (i in 1:12) {
frec[i] <- count(datost %>% filter(Mes == i))[[1]]
}
return( frec )
}
frecuencias.O <- F.Frecuencias(defraudaciones, "O")
frecuencias.D <- F.Frecuencias(defraudaciones, "D")
chisq.test(frecuencias.D)
chisq.test(frecuencias.O)
frecuencias.R <- F.Frecuencias(defraudaciones, "R")
frecuencias.R
frecuencias.R <- F.Frecuencias(defraudaciones, "R")[1:6]
frecuencias.R
frecuencias.R
chisq.test(frecuencias.R)
defraudaciones$FechaRegistro
fechas <- defraudaciones$FechaRegistro
F.lambda.Diario(fechas)
F.lambda.Diario <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)]) ) )
}
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/365 ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
(2/365)
1/(2/365)
365/2
1/(2/365)
1/(2/365)
365/2
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])*(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])*(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Anual(fechas)
febrero=0
marzo=0
abril=0
mayo=0
junio=0
julio=0
for (i in 1:length(meses)){
if(meses[i]=='febrero'){
febrero=febrero+1
}
else if(meses[i]=='marzo'){
marzo=marzo+1
}
else if(meses[i]=='abril')
abril=abril+1
else if(meses[i]=='mayo')
mayo=mayo+1
else if(meses[i]=='junio'){
junio=junio+1}
else if(meses[i]=='julio'){
julio=julio+1}
}
fechas
meses <- month(defraudaciones$FechaRegistro)
meses
defraudaciones$FechaRegistro
meses <- month(defraudaciones$FechaRegistro)
febrero=0
marzo=0
abril=0
mayo=0
junio=0
julio=0
for (i in 1:length(meses)){
if(meses[i]=='febrero'){
febrero=febrero+1
}
else if(meses[i]=='marzo'){
marzo=marzo+1
}
else if(meses[i]=='abril')
abril=abril+1
else if(meses[i]=='mayo')
mayo=mayo+1
else if(meses[i]=='junio'){
junio=junio+1}
else if(meses[i]=='julio'){
julio=julio+1}
}
meses2 = c(febrero,marzo,abril,mayo,junio,julio)
meses2
meses <- month(defraudaciones$FechaRegistro)
enero=0
febrero=0
marzo=0
abril=0
mayo=0
junio=0
for (i in 1:length(meses)){
if(meses[i]==1){
enero=enero+1
}
else if(meses[i]==2){
febrero=febrero+1
}
else if(meses[i]==3){
marzo=marzo+1
}
else if(meses[i]==4)
abril=abril+1
else if(meses[i]==5)
mayo=mayo+1
else if(meses[i]==6){
junio=junio+1}
}
meses2 = c(enero,febrero,marzo,abril,mayo,junio)
meses2
F.lambda.Anual <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Diario(fechas)
F.lambda.Semestral <- function(fechas){
return( as.double( mean( fechas[-1] - fechas[-length(fechas)])/(365/2) ) )
}
F.lambda.Semestral(fechas)
defraudaciones$FechaRegistro
